"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpError = exports.GrammyError = void 0;
/**
 * This class represents errors that are thrown by grammY because the Telegram
 * Bot API responded with an error.
 *
 * Instances of this class hold the information that the Telegram backend
 * returned.
 *
 * If this error is thrown, grammY could successfully communicate with the
 * Telegram Bot API servers, however, an error code was returned for the
 * respective method call.
 */
class GrammyError extends Error {
    constructor(message, err, 
    /** The called method name which caused this error to be thrown. */
    method, 
    /** The payload that was passed when calling the method. */
    payload) {
        var _a;
        super(`${message} (${err.error_code}: ${err.description})`);
        Object.defineProperty(this, "method", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: method
        });
        Object.defineProperty(this, "payload", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: payload
        });
        /** Flag that this request was unsuccessful. Always `false`. */
        Object.defineProperty(this, "ok", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        /** An integer holding Telegram's error code. Subject to change. */
        Object.defineProperty(this, "error_code", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** A human-readable description of the error. */
        Object.defineProperty(this, "description", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        /** Further parameters that may help to automatically handle the error. */
        Object.defineProperty(this, "parameters", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.name = "GrammyError";
        this.error_code = err.error_code;
        this.description = err.description;
        this.parameters = (_a = err.parameters) !== null && _a !== void 0 ? _a : {};
    }
}
exports.GrammyError = GrammyError;
/**
 * This class represents errors that are thrown by grammY because an HTTP call
 * to the Telegram Bot API failed.
 *
 * Instances of this class hold the error object that was created because the
 * fetch call failed. It can be inspected to determine why exactly the network
 * request failed.
 *
 * If an [API transformer
 * function](https://grammy.dev/advanced/transformers.html) throws an error,
 * grammY will regard this as if the network request failed. The contained error
 * will then be the error that was thrown by the transformer function.
 */
class HttpError extends Error {
    constructor(message, 
    /** The thrown error object. */
    error) {
        super(message);
        Object.defineProperty(this, "error", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: error
        });
        this.name = "HttpError";
    }
}
exports.HttpError = HttpError;
